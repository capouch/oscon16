<Section>
  <Team>
    <TeamMember name="Member 1" title="Co-founder" imageUrl="img/people/boo.jpg">
    Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.
    </TeamMember>
    <TeamMember name="Member 2" title="Co-founder" imageUrl="img/people/grumpycat.jpg">
    Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.
    </TeamMember>
    <TeamMember name="Member 3" title="Co-founder" imageUrl="img/people/panda.jpg">
    Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.
    </TeamMember>
  </Team>
</Section>

From Zoomer:
// public methods
export default function zoomerInitModule ( path ) {
  let id = 'bremer';
  console.log("zoomer init mod");
  let url=document.URL;
  console.log('Got URL ' + url);
  let regex = /[^/]+\?show=(\w+)/
  if (url.match(regex)) {
     id = url.match(regex)[1];
     console.log('Setting new id of ' + id);
  }
  //  let id = url.match(regex)[1];
  if (id == null ) { id = 'brush'};
  //id = 'brush';
  renderImage(id);
}

// Boy if this piece of code could talk!!
let LinkComponent = React.createClass({
  render: function(){
    // Set .tif files to one URL, all others to another . .
    let target = this.props.data,
      image = { show: "bremer" };
      tifRegex = /tif/;

    if (tifRegex.test(target)) {
      image = { show: "brush" };
    }

      return (<NavLink to="/zoomer" className="nav-link">{this.props.data}</NavLink>
  )}
  });

  return <a href={url}>{this.props.data}</a>

queryURL="/oscon-test?query=mutation+{addImage(data: { title: " + JSON.stringify(fieldValues.title) +
  ",description: " + JSON.stringify(fieldValues.description) + ", filename: " + JSON.stringify(fieldValues.filename)
  +", source: " + JSON.stringify(fieldValues.source) + ", taglist: " + JSON.stringify(fieldValues.taglist)+ "})}";
>>>>>>> master
